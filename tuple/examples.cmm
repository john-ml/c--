// a separate header file must be used for definitions that
// need to persist across preprocessor passes
#include "examples.h"

cyc cyc cyc (1, 2, 3, 4, 5)

// nop necessary to make preprocessor wait for the _'s to finish
swp nop2 (a _ (b _ (c, d)))

// isempty
isempty ((3, ))
isempty ((), )
isempty (zero, ) // zero is just an empty tuple

// conditionals
if (false, 1, 2, )
if (true, 1, 2, )
if isempty ((), 1, 2, )
if isempty ((3) _ (1, 2))

// connectives
and (false, false)
and (false, true)
and (true, false)
and (true, true)
or (false, false)
or (false, true)
or (true, false)
or (true, true)
not (false, )
not (true, )

// arithmetic
pred (zero)
succ succ (zero)
pred succ (zero)
pred succ succ (zero)
plus dup succ succ (zero)

// (2 + 2 = 4) - 1 = 3 (not-so-quick maths)
pred plus succ succ swp succ succ dup (zero)

// 1 + 2 + ... + 23 = 23 * 24 / 2 = 276 
triangular succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ succ (zero)

// 9 * 4 = 36
mult ((s,s,s,s,s,s,s,s,s,), (s,s,s,s,))

// 3 * 3 * 3 * 3 = 27
mult mult mult mult mult dup dup dup dup dup ((s, s, s,))
